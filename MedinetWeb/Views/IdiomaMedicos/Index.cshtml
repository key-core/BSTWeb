@{
    ViewBag.Title = "Idioma médicos";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>

@(Html.Kendo().Grid<MedinetWeb.Models.MirrorEntityModel.MMW_IdiomaMedicos>()
    // Grid Name
    .Name("Grid")
    
    // Declare grid column
    .Columns(columns =>
                 {
                     // Cretae all the columns base on Model
                     columns.Bound(r => r.ID_Idioma).Title("ID");
                     columns.Bound(r => r.TX_Idioma).Title("Nombre");
                     columns.Bound(r => r.BO_Activo).Title("Activo")
                        .ClientTemplate("<input type='checkbox' #= BO_Activo ? checked='checked' : '' # disabled='disabled'}></input>");
                                              
                     // Edit and Delete button column
                     columns.Command(command =>
                                         {
                                             command.Edit().Text("Editar");
                                             command.Destroy().Text("Eliminar");
                                         }).Width(180);
                 })
                 
    // Declare ajax datasource.
    // CRUD operation are wired back to ASP MVC Controller/Action e.g. HomeController, GetAll
    // Set the model Id
    .DataSource(datasoure => datasoure.Ajax()
                                .Events(events => events.Error("GridError"))
                                
                                .Model(model =>
                                    {
                                        model.Id(record => record.ID_Idioma);
                                        model.Field(record => record.BO_Activo).DefaultValue(true);
                                    }
                                )
                                .Read(read => read.Action("GetAll", "IdiomaMedicos"))
                                .Create(create => create.Action("Add", "IdiomaMedicos"))
                                .Update(update => update.Action("Update", "IdiomaMedicos"))
                                .Destroy(delete => delete.Action("Delete", "IdiomaMedicos"))
                                .PageSize(5)
                                
    )

    .Events(e => e.Save("onSave"))

    // Add tool bar with Create button
    .ToolBar(toolbar => toolbar.Create().Text("Agregar registro"))
    
    // Set grid editable.
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    
    // Set grid sortable.
    .Sortable()
    
    // Set grid selectable.
    .Selectable()
    
    // Set grid groupable.
    .Groupable()
    
    // Set grid filterable.
    .Filterable()    

    // Set grid pagable.
    .Pageable(pageable =>
                  {
                      pageable.Refresh(true);
                      pageable.PageSizes(true);
                  })
)

<script>
    function onSave(e) {
        var currentRecordTX = e.model.TX_Idioma;
        var currentRecordID = e.model.ID_Idioma;
        var data = this.dataSource.data();

        for (item in data) {
            if ($.isNumeric(item))
                if (data[item].TX_Idioma.toUpperCase() == currentRecordTX.toUpperCase() &&
                    data[item].ID_Idioma != currentRecordID) {
                    e.preventDefault();
                    alert("Nombre de idioma duplicado.");
                }
        }
    }
</script>