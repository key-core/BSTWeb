@{
    ViewBag.Title = "Variación fichero";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>

@(Html.Kendo().Grid<MedinetWeb.Models.SP_MW_VarFicheroPorReg_Result>()
        // Grid Name
    .Name("Grid")

    // Declare grid column
    .Columns(columns =>
                 {
                     columns.ForeignKey(p => p.ID_Region, (System.Collections.IEnumerable)ViewData["dvRegiones"], "ID", "TX")
                         .Title("Región")
                         .Width(40);
                     columns.Bound(r => r.Fichados).Title("Fichados")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.AltaAprobada).Title("Alta Apro.")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.EnEstudio).Title("En estudio")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.AltaPosterior).Title("Alta Post.")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.BajaAprobada).Title("Baja Apro.")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.BajaPosterior).Title("Baja Post.")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                     columns.Bound(r => r.FicheroFinal).Title("Fichero final")
                         .HtmlAttributes(new { style = "text-align:right" })
                         .Format("{0:n0}")
                         .Width(40);
                 })

    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
        <div class="toolbar">
            <label class="ciclo-label" for="ciclo">Ciclo:</label>
            @(Html.Kendo().DropDownList()
                                    .Name("ddCiclos")
                                    .OptionLabel("Select")
                                    .DataTextField("TX")
                                    .DataValueField("ID")
                                    .AutoBind(false)
                                    .Events(e => e.Change("ciclosChange"))
                                    .DataSource(ds =>
                                    {
                                        ds.Read("GetCiclosConData", "Ciclos");
                                    })
                                )
        </div>
        </text>);
    })

    // Declare ajax datasource.
        // CRUD operation are wired back to ASP MVC Controller/Action e.g. HomeController, GetAll
        // Set the model Id
    .DataSource(datasoure => datasoure.Ajax()
                                .Events(events => events.Error("GridError"))

                                .Read(read => read.Action("GetAllReg", "VariacionFichero").Data("paramConsulta"))
    )

    // Set grid sortable.
    .Sortable(sortable => sortable
    .AllowUnsort(true)
    .SortMode(GridSortMode.MultipleColumn))

    // Set grid selectable.
    .Selectable()
    
    // Llama al detalle
    .ClientDetailTemplateId("templateRegLin")
)

<script>
    function ciclosChange() {
        $("#Grid").data("kendoGrid").dataSource.read();
    }

    function paramConsulta() {
        return {
            cicloID: $("#ddCiclos").val() != "" ? $("#ddCiclos").val() : 0
        }
    }
</script>

<script id="templateRegLin" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<MedinetWeb.Models.SP_MW_VarFicheroPorRegLin_Result>()
            .Name("Grid_#=ID_Region#")
            .Columns(columns =>
            {
                    columns.ForeignKey(p => p.ID_Linea, (System.Collections.IEnumerable)ViewData["dvLineas"], "ID", "TX")
                        .Title("Línea")
                        .Width(40);
                    columns.Bound(r => r.Fichados).Title("Fichados")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.AltaAprobada).Title("Alta Apro.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.EnEstudio).Title("En estudio")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.AltaPosterior).Title("Alta Post.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.BajaAprobada).Title("Baja Apro.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.BajaPosterior).Title("Baja Post.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.FicheroFinal).Title("Fichero final")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);

            })
                        
            // Llama al detalle
            .ClientDetailTemplateId("templateRegLinVis")

            .DataSource(dataSource => dataSource
                .Ajax()
                //.PageSize(10)
                .Read(read => read.Action("GetAllRegLin", "VariacionFichero", 
                    new { cicloID = "#=ID_Ciclo#", regionID = "#=ID_Region#"}))
            )
            //.Pageable()
            
            // Set grid selectable.
            .Selectable()
            
            // Set grid sortable.
            .Sortable(sortable => sortable
            .AllowUnsort(true)
            .SortMode(GridSortMode.MultipleColumn))
            
            .ToClientTemplate()
    )
</script>

<script id="templateRegLinVis" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<MedinetWeb.Models.SP_MW_VarFicheroPorRegLinVis_Result>()
            .Name("Grid_#=ID_Region#_#=ID_Linea#")
            .Columns(columns =>
            {
                columns.ForeignKey(p => p.ID_Usuario, (System.Collections.IEnumerable)ViewData["dvVisitadores"], "ID", "TX")
                        .Title("Visitador")
                        .Width(60); 
                    columns.Bound(r => r.Fichados).Title("Fichados")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.AltaAprobada).Title("Alta Apro.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.EnEstudio).Title("En estudio")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.AltaPosterior).Title("Alta Post.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.BajaAprobada).Title("Baja Apro.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.BajaPosterior).Title("Baja Post.")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);
                    columns.Bound(r => r.FicheroFinal).Title("Fichero final")
                        .HtmlAttributes(new { style = "text-align:right" })
                        .Format("{0:n0}")
                        .Width(40);

            })

            // Llama al detalle
            .ClientDetailTemplateId("templateAltasBajas")

            .DataSource(dataSource => dataSource
                .Ajax()
                //.PageSize(10)
                .Read(read => read.Action("GetAllRegLinVis", "VariacionFichero", 
                    new { cicloID = "#=ID_Ciclo#", regionID = "#=ID_Region#", lineaID = "#=ID_Linea#" }))
            )
            //.Pageable()
            
            // Set grid selectable.
            .Selectable()
            
            // Set grid sortable.
            .Sortable(sortable => sortable
            .AllowUnsort(true)
            .SortMode(GridSortMode.MultipleColumn))
            
            .ToClientTemplate()
    )
</script>

<script id="templateAltasBajas" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
            .Name("tabStrip_#=ID_Region#_#=ID_Linea#_#=ID_Usuario#")
            .SelectedIndex(0)
            .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
            .Items(items =>
            {
                items.Add().Text("Altas").Content(
                    @<text>
                    @(Html.Kendo().Grid<MedinetWeb.Models.SP_MW_VarFicheroAltas_Result>()
                        .Name("GridAltas_#=ID_Region#_#=ID_Linea#_#=ID_Usuario#")
                        .Columns(columns =>
                        {
                            columns.Bound(r => r.Medico).Title("Médico")
                                .Width(40);
                            columns.Bound(r => r.Clasificacion).Title("Clasificación")
                                .Width(40);
                            columns.Bound(r => r.Especialidad).Title("Especialidad")
                                .Width(40);
                            columns.Bound(r => r.AltaAprobada).Title("Alta Apro.")
                                .HtmlAttributes(new { style = "text-align:right" })
                                .Width(40);
                            columns.Bound(r => r.EnEstudio).Title("En estudio")
                                .HtmlAttributes(new { style = "text-align:right" })
                                .Format("{0:n0}")
                                .Width(40);
                            columns.Bound(r => r.AltaPosterior).Title("Alta Post.")
                                .HtmlAttributes(new { style = "text-align:right" })
                                .Format("{0:n0}")
                                .Width(40);
                        })
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Read(read => read.Action("GetAllAltas", "VariacionFichero", 
                                new { cicloID = "#=ID_Ciclo#", visitadorID = "#=ID_Usuario#" }))
                        )
                        // Set grid selectable.
                        .Selectable()
            
                        // Set grid sortable.
                        .Sortable(sortable => sortable
                        .AllowUnsort(true)
                        .SortMode(GridSortMode.MultipleColumn))
                        .ToClientTemplate())
                </text>
                );

                items.Add().Text("Bajas").Content(
                    @<text>
                    @(Html.Kendo().Grid<MedinetWeb.Models.SP_MW_VarFicheroBajas_Result>()
                        .Name("GridBajas_#=ID_Region#_#=ID_Linea#_#=ID_Usuario#")
                        .Columns(columns =>
                        {
                            columns.Bound(r => r.Medico).Title("Médico")
                                .Width(40);
                            columns.Bound(r => r.Clasificacion).Title("Clasificación")
                                .Width(40);
                            columns.Bound(r => r.Especialidad).Title("Especialidad")
                                .Width(40);
                            columns.Bound(r => r.BajaAprobada).Title("Baja Apro.")
                                .HtmlAttributes(new { style = "text-align:right" })
                                .Width(40);
                            columns.Bound(r => r.BajaPosterior).Title("Baja Post.")
                                .HtmlAttributes(new { style = "text-align:right" })
                                .Width(40);
                        })
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Read(read => read.Action("GetAllBajas", "VariacionFichero",
                                new { cicloID = "#=ID_Ciclo#", visitadorID = "#=ID_Usuario#" }))
                        )
                            // Set grid selectable.
                        .Selectable()

                        // Set grid sortable.
                        .Sortable(sortable => sortable
                        .AllowUnsort(true)
                        .SortMode(GridSortMode.MultipleColumn))
                        .ToClientTemplate())
                </text>
                );
            })
            .ToClientTemplate())
</script>


<script>
    //function dataBound() {
    //    this.expandRow(this.tbody.find("tr.k-master-row").first());
    //}
</script>

<style scoped="scoped">
    /*#Grid .k-toolbar {
        min-height: 27px;
        padding: 1.3em;
    }*/

    .ciclo-label {
        vertical-align: middle;
        padding-right: .5em;
    }

    #ciclo {
        vertical-align: middle;
    }

    .toolbar {
        float: right;
    }

    label {
        display: inline-block;
        vertical-align: middle;
    }

    .k-grid .k-hierarchy-col {
      width: 5px;
    }
</style>
